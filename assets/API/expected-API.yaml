openapi: 3.0.0
info:
  title: 'API Gateway for Restaurant Services'
  version: '1.0.0'
  description: 'An API Gateway that aggregates various restaurant services.'

paths:  
  /login:
    post:
      summary: 'Logs the user in by email and password'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
    responses:
      '200':
        description: Successful login
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: Authorization token
      '400':
        description: Invalid request
      '401':
        description: Unauthorized

  /register:
    post:
      summary: 'Creates a new user and logs them in'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                name:
                  type: string
      responses:
        '201':
          description: Successful registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Authorization token
        '400':
          description: Invalid request

  /search:
    get:
      summary: 'Searches for restaurants by a given query string'
      parameters:
        - in: query
          name: query
          required: true
          schema:
            type: string
          description: The search query string
      responses:
        '200':
          description: Successful search
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    description:
                      type: string
                    averageRating:
                      type: number
                    visited:
                      type: boolean

  /restaurant/{restaurantId}:
    get:
      summary: 'Returns all details of a restaurant'
      parameters:
        - in: path
          name: restaurantId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  averageRating:
                    type: number
                  menuItems:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        price:
                          type: number
                  ratings:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        reviewer:
                          type: string
                        rating:
                          type: number
                        comment:
                          type: string
        '404':
          description: Restaurant not found

  /restaurant/{restaurantId}/review:
    post:
      summary: 'Submit a review for a restaurant'
      parameters:
        - in: path
          name: restaurantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: number
                comment:
                  type: string
      responses:
        '201':
          description: Review successfully added
        '400':
          description: Invalid request

  /restaurant/{restaurantId}/order:
    post:
      summary: 'Place an order for a restaurant'
      parameters:
        - in: path
          name: restaurantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  menuItemId:
                    type: string
                  quantity:
                    type: integer
      responses:
        '201':
          description: Order successfully placed
        '400':
          description: Invalid request

components:
securitySchemes:
  bearerAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT

security:
- bearerAuth: []